{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login/\", {\n      username: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/register/\", {\n      name: name,\n      email: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","username","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","ORDER_LIST_MY_RESET","USER_LIST_RESET","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"sources":["/home/raihanrafi/Fullstack_E-Commerce/fronend/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      { username: email, password: password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/register/\",\n      { name: name, email: email, password: password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}/`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/profile/update/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}