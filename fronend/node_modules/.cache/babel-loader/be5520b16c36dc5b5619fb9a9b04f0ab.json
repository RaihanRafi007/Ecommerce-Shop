{"ast":null,"code":"var _jsxFileName = \"/home/raihanrafi/Fullstack_E-Commerce/fronend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen(_ref) {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const navigate = useNavigate();\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails; // const userUpdate = useSelector(state => state.userUpdate)\n  // const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, successUpdate, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: user._id,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserEditScreen, \"1rwIbwK98GQbMn+UPZPt88L20do=\", true, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","match","history","navigate","useNavigate","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","error","loading","user","successUpdate","type","push","_id","Number","submitHandler","e","preventDefault","loadingUpdate","errorUpdate","target","value","checked"],"sources":["/home/raihanrafi/Fullstack_E-Commerce/fronend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const navigate = useNavigate();\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    // const userUpdate = useSelector(state => state.userUpdate)\n    // const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}