{"ast":null,"code":"var _jsxFileName = \"/home/raihanrafi/Fullstack_E-Commerce/fronend/src/screens/PlaceOrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Col, Image, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaceOrderScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart); //   cart.itemsPrice = cart.cartItems\n  //     .reduce((acc, item) => acc + item.price * item.qty, 0)\n  //     .toFixed(2);\n  //   cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\n  //   cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\n  //   if (!cart.paymentMethod) {\n  //     navigate(\"/payment\");\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true,\n      step4: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlaceOrderScreen, \"0dVZgNdrk3WQvRNTaG3I10sgZVM=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = PlaceOrderScreen;\nexport default PlaceOrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceOrderScreen\");","map":{"version":3,"names":["React","Button","Card","Col","Image","ListGroup","Row","useDispatch","useSelector","Message","Link","useNavigate","CheckoutSteps","PlaceOrderScreen","navigate","dispatch","cart","state"],"sources":["/home/raihanrafi/Fullstack_E-Commerce/fronend/src/screens/PlaceOrderScreen.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Card, Col, Image, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nfunction PlaceOrderScreen() {\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n\n//   cart.itemsPrice = cart.cartItems\n//     .reduce((acc, item) => acc + item.price * item.qty, 0)\n//     .toFixed(2);\n//   cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\n//   cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\n\n//   if (!cart.paymentMethod) {\n//     navigate(\"/payment\");\n//   }\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4 />\n      {/* <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Shipping: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                {\"  \"}\n                {cart.shippingAddress.postalCode},{\"  \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n          </ListGroup>\n\n          <ListGroup.Item>\n            <h2>Payment Method</h2>\n            <p>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </p>\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <h2>Order Items</h2>\n            {cart.cartItems.lenght === 0 ? (\n              <Message variant=\"info\">Your cart is empty</Message>\n            ) : (\n              <ListGroup variant=\"flush\">\n                {cart.cartItems.map((item, index) => (\n                  <ListGroup.Item key={index}>\n                    <Row>\n                      <Col md={1}>\n                        <Image src={item.image} alt={item.name} fluid rounded />\n                      </Col>\n\n                      <Col>\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                      </Col>\n\n                      <Col md={4}>\n                        {item.qty} X ${item.price} = $\n                        {(item.qty * item.price).toFixed(2)}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            )}\n          </ListGroup.Item>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrder}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row> */}\n    </div>\n  );\n}\n\nexport default PlaceOrderScreen;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8CC,GAA9C,QAAyD,iBAAzD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAEA,SAASC,gBAAT,GAA4B;EAAA;;EAC1B,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EAEA,MAAMI,QAAQ,GAAGR,WAAW,EAA5B;EAEA,MAAMS,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB,CAL0B,CAO5B;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;EAEE,oBACE;IAAA,uBACE,QAAC,aAAD;MAAe,KAAK,MAApB;MAAqB,KAAK,MAA1B;MAA2B,KAAK,MAAhC;MAAiC,KAAK;IAAtC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6GD;;GA9HQH,gB;UACUF,W,EAEAJ,W,EAEJC,W;;;KALNK,gB;AAgIT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}