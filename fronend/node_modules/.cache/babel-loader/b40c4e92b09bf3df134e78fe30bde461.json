{"ast":null,"code":"import { legacy_createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = legacy_createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["legacy_createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userDeleteReducer","userDetailsReducer","userListReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["/home/raihanrafi/Fullstack_E-Commerce/fronend/src/store.js"],"sourcesContent":["import { legacy_createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userDeleteReducer,\n  userDetailsReducer,\n  userListReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderPayReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = legacy_createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,eAA7B,EAA8CC,eAA9C,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,wBANF,QAOO,yBAPP;AAQA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGjB,eAAe,CAAC;EAC9BkB,WAAW,EAAEd,kBADiB;EAE9Be,cAAc,EAAEd,qBAFc;EAI9Be,IAAI,EAAEd,WAJwB;EAK9Be,SAAS,EAAEX,gBALmB;EAM9BY,YAAY,EAAEX,mBANgB;EAO9BY,WAAW,EAAEf,kBAPiB;EAQ9BgB,iBAAiB,EAAEZ,wBARW;EAS9Ba,QAAQ,EAAEhB,eAToB;EAU9BiB,UAAU,EAAEnB,iBAVkB;EAY9BoB,WAAW,EAAEd,kBAZiB;EAa9Be,YAAY,EAAEd,mBAbgB;EAc9Be,QAAQ,EAAEb,eAdoB;EAe9Bc,WAAW,EAAEf;AAfiB,CAAD,CAA/B;AAkBA,MAAMgB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;EACnBlB,IAAI,EAAE;IACJmB,SAAS,EAAER,oBADP;IAEJS,eAAe,EAAEH;EAFb,CADa;EAKnBhB,SAAS,EAAE;IAAEoB,QAAQ,EAAEL;EAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACxC,KAAD,CAAnB;AAEA,MAAMyC,KAAK,GAAG5C,kBAAkB,CAC9BkB,OAD8B,EAE9BqB,YAF8B,EAG9BnC,mBAAmB,CAACF,eAAe,CAAC,GAAGyC,UAAJ,CAAhB,CAHW,CAAhC;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}