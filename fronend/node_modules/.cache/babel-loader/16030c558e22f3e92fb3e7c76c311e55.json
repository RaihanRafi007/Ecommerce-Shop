{"ast":null,"code":"var _jsxFileName = \"/home/raihanrafi/Fullstack_E-Commerce/fronend/src/screens/UserEditScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen() {\n  // let { id } = useParams();\n  // const navigate = useNavigate();\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [isAdmin, setIsAdmin] = useState(false);\n  // const dispatch = useDispatch();\n  // const userDetails = useSelector((state) => state.userDetails);\n  // const { error, loading, user } = userDetails;\n  // // const userUpdate = useSelector((state) => state.userUpdate);\n  // // const {\n  // //   error: errorUpdate,\n  // //   loading: loadingUpdate,\n  // //   success: successUpdate,\n  // // } = userUpdate;\n  // useEffect(() => {\n  //     if (!user.name || user._id !== Number(id)) {\n  //       dispatch(getUserDetails(id));\n  //     } else {\n  //       setName(user.name);\n  //       setEmail(user.email);\n  //       setIsAdmin(user.isAdmin);\n  //     }\n  // }, [user, dispatch, navigate, id]);\n  // const submitHandler = (e) => {\n  //   e.preventDefault();\n  //   // dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useParams","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen"],"sources":["/home/raihanrafi/Fullstack_E-Commerce/fronend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nfunction UserEditScreen() {\n  // let { id } = useParams();\n\n  // const navigate = useNavigate();\n\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [isAdmin, setIsAdmin] = useState(false);\n\n  // const dispatch = useDispatch();\n\n  // const userDetails = useSelector((state) => state.userDetails);\n  // const { error, loading, user } = userDetails;\n\n  // // const userUpdate = useSelector((state) => state.userUpdate);\n  // // const {\n  // //   error: errorUpdate,\n  // //   loading: loadingUpdate,\n  // //   success: successUpdate,\n  // // } = userUpdate;\n\n  // useEffect(() => {\n  //     if (!user.name || user._id !== Number(id)) {\n  //       dispatch(getUserDetails(id));\n  //     } else {\n  //       setName(user.name);\n  //       setEmail(user.email);\n  //       setIsAdmin(user.isAdmin);\n  //     }\n    \n  // }, [user, dispatch, navigate, id]);\n\n  // const submitHandler = (e) => {\n  //   e.preventDefault();\n  //   // dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\n  // };\n\n  return (\n    <div>\n      Hello\n      {/* <Link to=\"/admin/userlist\">Go Back</Link> */}\n\n      {/* <FormContainer>\n        <h1>Edit User</h1>\n        \n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer> */}\n    </div>\n  );\n}\n\nexport default UserEditScreen;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,QAA6C,kBAA7C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,wBAA3C;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;;AAEA,SAASC,cAAT,GAA0B;EACxB;EAEA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EAEA,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmDD;;KAxFQA,c;AA0FT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}